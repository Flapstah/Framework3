#if !defined(__ENGINE_H__)
#define __ENGINE_H__

//==============================================================================

#include "time/time.h"

//==============================================================================

namespace engine
{
	//============================================================================

	namespace base
	{
		//==========================================================================
		// CEngine
		//==========================================================================
		class CEngine
		{
			//========================================================================

		public:
			enum eFlags
			{
				eF_INITIALISED = 1 << 0,
			}; // End [enum eFlags]

			//------------------------------------------------------------------------

		public:
			SINGLETON(CEngine);
			virtual ~CEngine(void);

			//========================================================================
			// Lifecycle
			//========================================================================
			bool Initialise(int argc, char* argv[]);
			engine::time::CTimeValue Update(void);
			bool Uninitialise(void);
			bool Terminate(void);

			//========================================================================
			// Systems
			//========================================================================
			engine::time::CTime* GetTime(void);

			//------------------------------------------------------------------------

		protected:
			uint32 m_flags;

			//========================================================================
		}; // End [class CEngine]

		//==========================================================================
	} // End [namespace base]

	//============================================================================
} // End [namespace engine]

//==============================================================================
#endif // End [!defined(__ENGINE_H__)]
// EOF

